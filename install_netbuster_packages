#!/bin/bash

OVERLAY=$PWD/root

set -e

# TODO: add dnsmasq to cache and redirect DNS to Google or OpenDNS
# TODO: randomize hostname?
# TODO: change pi username?
# TODO: change pi password
# TODO: allow changing of ssid, password, channel number, encryption type, in hostapd.conf
# TODO: remove unnecessary packages like X
# TODO: come up with a reset/power loss tolerant methdology (ro root for example)

# RPi HW version
# Supports RPi4 and RPi3
RPI_VER=4

if [ $RPI_VER == 4 ]
then echo "Installing Netbuster for RPi4 HW assuming on Raspbian Buster.."
else echo "Installing Netbuster for RPi3 HW assuming on Raspbian Jessie.."
fi

##############################################################################
# Networking, SSH, DHCP server, access point
##############################################################################

# Install SSH for remote access
systemctl enable ssh

# NOTE: This version of hostapd is v0.8.x which does not support the rpi3 internal wifi
# for that you will need to go here: http://w1.fi/hostapd and build version 2.6 to add
# nl80211 driver support for the internal wifi and replace the binary with this one.
# To build the source you will need to add these packages as well (uncomment)
apt-get install -y libssl-dev
apt-get install -y libnl-genl-3-dev
apt-get install -y libnl-3-dev

# Install bridge utililities (e.g. brctl)
apt-get install -y bridge-utils

# Install dhcpd server
apt-get install -y \
  hostapd isc-dhcp-server

# Configure DHCPd
TARGET=/etc/dhcp/dhcpd.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
TARGET=/etc/dhcp/dhclient.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
TARGET=/etc/default/isc-dhcp-server
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

# Configure DHCPcd
TARGET=/etc/dhcpcd.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET$RPI_VER $TARGET

# RPi4 uses dhcpcd.conf to setup all interfaces
if [ $RPI_VER == 3 ]
# Set network interface config
then TARGET=/etc/network/interfaces
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
fi

# hostapd install for RPi4 and config
if [ $RPI_VER == 4 ]
then apt-get install -y hostapd
fi
TARGET=/etc/hostapd/hostapd.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

# Dont use pre-made hostapd
if [ $RPI_VER == 3 ]
then TARGET=/etc/default/hostapd
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
fi

# sudoers config, need to keep permissions to need to copy, cant symbolic link
TARGET=/etc/sudoers
cp $OVERLAY$TARGET $TARGET

# rc.local startup config
TARGET=/etc/rc.local
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

# NAT
TARGET=/etc/sysctl.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
echo 1 > /proc/sys/net/ipv4/ip_forward
# NAT commands to generate config
# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
# iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
# iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT
# View tables: iptables -t nat -S
# View tables: iptables -S
# iptables-save > /etc/iptables.ipv4.nat
TARGET=/etc/iptables.ipv4.nat
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

# Update hostapd with premade binary only for RPi3
if [ $RPI_VER == 3 ]
then TARGET=/usr/sbin/hostapd
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
fi

# Enable daemons on startup
# Unmask for RPi4
if [ $RPI_VER == 4 ]
then systemctl unmask hostapd
fi
update-rc.d hostapd enable 
update-rc.d isc-dhcp-server enable


##############################################################################
# Database
##############################################################################

apt-get install -y \
  sqlite3 libdbi-perl libdbd-sqlite3-perl

./initialize_database

#####################
# APACHE WEB SERVER #
#####################
if [ $RPI_VER == 4 ]
then apt-get install -y apache2 php libapache2-mod-php php-sqlite3
else apt-get install -y apache2 php5 libapache2-mod-php5 php5-sqlite
fi

# Configure Webpages
# later version of raspbian use new apache2 that uses html directory now
# uncomment if using rpi3 with latest installs
TARGET=/var/www/html
#TARGET=/var/www
rm -rf $TARGET && ln -s $OVERLAY$TARGET $TARGET
TARGET=/etc/apache2/ports.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET


##############################################################################
# Control over ifplugd
##############################################################################

TARGET=/etc/default/ifplugd
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

#########################
# TOR Anonymous Network #
#########################
apt-get install -y libevent-dev
apt-get install -y tor
TARGET=/etc/tor/torrc
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

#########################
# I2P Anonymous Network #
#########################

# OLD METHOD WHICH DOES NOT WORK
# No good existing packages exist apparently for us, just need to do it manually
#
#apt-get install -y software-properties-common
#apt-get install -y apt-transport-https
# Build the lsb_release config but replace Raspian with what I2P supports 
# which is Debian
#TEST=$(uname -a)
#echo $TEST
#OS=$(lsb_release -si)
#OS="Debian"
#DESC=$(lsb_release -sd)
#ARCH=$(uname -m | sed 's/x86_//;s/i[3-6]86/32/')
#VER=$(lsb_release -sr)
#echo -e "DISTRIB_ID=$OS\\nDISTRIB_RELEASE=$VER\\nDISTRIB_DESCRIPTION=$DESC\\n"
#echo -e "DISTRIB_ID=$OS\\nDISTRIB_RELEASE=$VER\\nDISTRIB_DESCRIPTION=$DESC\\n" > /etc/lsb-release
#apt-add-repository -y ppa:i2p-maintainers/i2p
#cd /etc/apt/sources.list.d
#wget https://geti2p.net/_static/i2p-debian-repo.key.asc
#apt-key add i2p-debian-repo.key.asc
#apt-get update

# New method is to flat out build the source and provide the binaries
# Compile the source manually but we did this already for everyone and include
# it in the distrobution so unless you need a new version this will be commented
# out for now.
#
# Install Boost C++ library 
#apt-get install -y libboost1.55-all-dev
#
#mkdir /sbin/temp
#mkdir /sbin/temp/upgrade
#
# Use C++ port of i2p for speed and performance
#wget https://github.com/PurpleI2P/i2pd/archive/2.13.0.tar.gz
#cd /sbin/temp/upgrade/i2pd-2.13.0
#tar -xzvf 2.13.0.tar.gz
#make
#cp i2pd /home/pi/Netbuster/root/usr/sbin
#
# New 2.15.0 compile instructions
# wget https://github.com/PurpleI2P/i2pd/archive/2.15.0.tar.gz
# cd /sbin/temp/upgrade/i2pd-2.15.0/build
# cmake .
# make

# Install pre-compiled i2p exec
TARGET=/usr/sbin/i2pd
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET
mkdir -p /etc/i2pd
mkdir -p /var/lib/i2pd
TARGET=/etc/i2pd/i2pd.conf
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

# Copy over the certificates
TARGET=/var/lib/i2pd/certificates
rm -f $TARGET && ln -s $OVERLAY$TARGET $TARGET

#########################
# Directory Permissions #
#########################
chgrp www-data /home/pi
chmod 755 /home/pi
chgrp www-data /home/pi/NetBuster
chmod 755 /home/pi/NetBuster

